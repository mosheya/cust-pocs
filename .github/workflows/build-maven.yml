name: CI

on:
  push:
    branches:
      - main
      - dev
      - multi-oidc
  pull_request:
    branches:
      - main
permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestation.
  contents: read

jobs:
  build-publish-maven:
      runs-on: ubuntu-latest
      env:
        DOCKER_REPO: 'mgm-project-docker-local'
        IMAGE_NAME: 'my-very-cool-image:${{ github.run_number }}'
        JF_URL: https://${{ vars.JF_URL }}/ 
        DOCKER_CLI_EXPERIMENTAL: enabled
        JFROG_PLATFORM_REPO: 'mgm-project-maven-virtual'
        JF_PROJECT: mgm-project

      steps:
          - name: Check out repository
            uses: actions/checkout@v4
        
          - name: Setup JFrog CLI
            id: setup-cli 
            uses: jfrog/setup-jfrog-cli@v4
            env:
                  JF_URL: https://psazeuwedge.jfrog.io/
            with:
                    oidc-provider-name: github-oidc-edge
                    oidc-audience: jfrog-github-edge
         
          - name: Configure Maven
           # run: jf mvnc --repo-deploy-releases $JFROG_PLATFORM_REPO --repo-deploy-snapshots $JFROG_PLATFORM_REPO --repo-resolve-releases $JFROG_PLATFORM_REPO --repo-resolve-snapshots $JFROG_PLATFORM_REPO
            run: jf mvnc --repo-resolve-releases my-smart-edge --repo-resolve-snapshots my-smart-edge

          - name: Build and Upload JAR to Artifactory
            env:
              JF_URL: https://${{ vars.JF_URL }}/ 
              JF_PROJECT: mgm-project
            run: jf mvn clean package

          - name: Setup JFrog CLI JPD
            id: setup-cli-JPD 
            uses: jfrog/setup-jfrog-cli@v4
            env:
                  JF_URL: https://${{ vars.JF_URL }}/
                  JF_PROJECT: mgm-project
            with:
                    oidc-provider-name: mgm-demo 
                    oidc-audience: mgm-demo-aud
          
          - name: Build and Upload JAR to Artifactory
            env:
              JF_URL: https://${{ vars.JF_URL }}/ 
              JF_PROJECT: mgm-project
            run: jf mvn deploy
                              
          - name: Authenticate Docker
            uses: docker/login-action@v3
            with:
                registry: ${{ vars.JF_URL }}
                username: ${{ steps.setup-cli-JPD.outputs.oidc-user }}
                password: ${{ steps.setup-cli-JPD.outputs.oidc-token }}

          - name: docker build through 
            run: |  
                jf docker --version
                jf docker build --tag ${{ vars.JF_URL }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }} --metadata-file  metadata.json --push .
                
          
            


